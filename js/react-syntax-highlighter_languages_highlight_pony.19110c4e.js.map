{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/pony.js"],"names":["pony","hljs","KEYWORDS","keyword","meta","literal","TRIPLE_QUOTE_STRING_MODE","className","begin","end","relevance","QUOTE_STRING_MODE","contains","BACKSLASH_ESCAPE","SINGLE_QUOTE_CHAR_MODE","TYPE_NAME","PRIMED_NAME","IDENT_RE","NUMBER_MODE","name","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","module","exports"],"mappings":"oIAQA,SAASA,EAAKC,GACZ,IAAIC,EAAW,CACbC,QACE,iTAKFC,KACE,0BACFC,QACE,mBAGAC,EAA2B,CAC7BC,UAAW,SACXC,MAAO,MAAOC,IAAK,MACnBC,UAAW,IAGTC,EAAoB,CACtBJ,UAAW,SACXC,MAAO,IAAKC,IAAK,IACjBG,SAAU,CAACX,EAAKY,mBAGdC,EAAyB,CAC3BP,UAAW,SACXC,MAAO,IAAMC,IAAK,IAClBG,SAAU,CAACX,EAAKY,kBAChBH,UAAW,GAGTK,EAAY,CACdR,UAAW,OACXC,MAAO,mBACPE,UAAW,GAGTM,EAAc,CAChBR,MAAOP,EAAKgB,SAAW,IAAMP,UAAW,GAGtCQ,EAAc,CAChBX,UAAW,SACXC,MAAO,+FACPE,UAAW,GAcb,MAAO,CACLS,KAAM,OACNC,SAAUlB,EACVU,SAAU,CACRG,EACAT,EACAK,EACAG,EACAE,EACAE,EACAjB,EAAKoB,oBACLpB,EAAKqB,uBAKXC,EAAOC,QAAUxB","file":"js/react-syntax-highlighter_languages_highlight_pony.19110c4e.js","sourcesContent":["/*\nLanguage: Pony\nAuthor: Joe Eli McIlvain <joe.eli.mac@gmail.com>\nDescription: Pony is an open-source, object-oriented, actor-model,\n             capabilities-secure, high performance programming language.\nWebsite: https://www.ponylang.io\n*/\n\nfunction pony(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'actor addressof and as be break class compile_error compile_intrinsic ' +\n      'consume continue delegate digestof do else elseif embed end error ' +\n      'for fun if ifdef in interface is isnt lambda let match new not object ' +\n      'or primitive recover repeat return struct then trait try type until ' +\n      'use var where while with xor',\n    meta:\n      'iso val tag trn box ref',\n    literal:\n      'this false true'\n  };\n\n  var TRIPLE_QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"\"\"', end: '\"\"\"',\n    relevance: 10\n  };\n\n  var QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n\n  var SINGLE_QUOTE_CHAR_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n\n  var TYPE_NAME = {\n    className: 'type',\n    begin: '\\\\b_?[A-Z][\\\\w]*',\n    relevance: 0\n  };\n\n  var PRIMED_NAME = {\n    begin: hljs.IDENT_RE + '\\'', relevance: 0\n  };\n\n  var NUMBER_MODE = {\n    className: 'number',\n    begin: '(-?)(\\\\b0[xX][a-fA-F0-9]+|\\\\b0[bB][01]+|(\\\\b\\\\d+(_\\\\d+)?(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n\n  /**\n   * The `FUNCTION` and `CLASS` modes were intentionally removed to simplify\n   * highlighting and fix cases like\n   * ```\n   * interface Iterator[A: A]\n   *   fun has_next(): Bool\n   *   fun next(): A?\n   * ```\n   * where it is valid to have a function head without a body\n   */\n\n  return {\n    name: 'Pony',\n    keywords: KEYWORDS,\n    contains: [\n      TYPE_NAME,\n      TRIPLE_QUOTE_STRING_MODE,\n      QUOTE_STRING_MODE,\n      SINGLE_QUOTE_CHAR_MODE,\n      PRIMED_NAME,\n      NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n}\n\nmodule.exports = pony;\n"],"sourceRoot":""}