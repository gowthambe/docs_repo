{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/css.js"],"names":["css","hljs","FUNCTION_LIKE","begin","returnBegin","contains","className","end","APOS_STRING_MODE","QUOTE_STRING_MODE","CSS_NUMBER_MODE","ATTRIBUTE","excludeEnd","starts","endsWithParent","C_BLOCK_COMMENT_MODE","AT_IDENTIFIER","AT_MODIFIERS","AT_PROPERTY_RE","IDENT_RE","RULE","name","case_insensitive","illegal","lexemes","keywords","relevance","module","exports"],"mappings":"mIAOA,SAASA,EAAIC,GACX,IAAIC,EAAgB,CAClBC,MAAO,WAAYC,aAAa,EAChCC,SAAU,CACR,CACEC,UAAW,WACXH,MAAO,UAET,CACEA,MAAO,KAAMI,IAAK,KAClBF,SAAU,CACRJ,EAAKO,iBACLP,EAAKQ,kBACLR,EAAKS,oBAKTC,EAAY,CACdL,UAAW,YACXH,MAAO,KAAMI,IAAK,IAAKK,YAAY,EACnCC,OAAQ,CACNC,gBAAgB,EAAMF,YAAY,EAClCP,SAAU,CACRH,EACAD,EAAKS,gBACLT,EAAKQ,kBACLR,EAAKO,iBACLP,EAAKc,qBACL,CACET,UAAW,SAAUH,MAAO,iBAE9B,CACEG,UAAW,OAAQH,MAAO,iBAK9Ba,EAAgB,WAChBC,EAAe,kBACfC,EAAiB,sBACjBC,EAAW,0BACXC,EAAO,CACTjB,MAAO,wCAAyCC,aAAa,EAAMG,IAAK,IAAKO,gBAAgB,EAC7FT,SAAU,CACRM,IAIJ,MAAO,CACLU,KAAM,MACNC,kBAAkB,EAClBC,QAAS,YACTlB,SAAU,CACRJ,EAAKc,qBACL,CACET,UAAW,cAAeH,MAAO,mBAEnC,CACEG,UAAW,iBAAkBH,MAAO,oBAEtC,CACEG,UAAW,gBACXH,MAAO,KAAMI,IAAK,KAClBgB,QAAS,IACTlB,SAAU,CACRJ,EAAKO,iBACLP,EAAKQ,oBAGT,CACEH,UAAW,kBACXH,MAAO,kCAKT,CACEA,MAAO,oBACPqB,QAASR,EACTS,SAAU,oBAEZ,CACEtB,MAAO,IAAKI,IAAK,OAIjBgB,QAAS,IACTnB,aAAa,EACbC,SAAU,CACR,CACEC,UAAW,UACXH,MAAOe,GAET,CACEf,MAAO,KAAMW,gBAAgB,EAAMF,YAAY,EAC/Cc,UAAW,EACXD,SAAUR,EACVZ,SAAU,CACR,CACEF,MAAO,WACPG,UAAU,aAEZL,EAAKO,iBACLP,EAAKQ,kBACLR,EAAKS,oBAKb,CACEJ,UAAW,eAAgBH,MAAOgB,EAClCO,UAAW,GAEb,CACEvB,MAAO,IAAKI,IAAK,IACjBgB,QAAS,KACTlB,SAAU,CACRJ,EAAKc,qBACLK,MAOVO,EAAOC,QAAU5B","file":"js/react-syntax-highlighter_languages_highlight_css.deb383bb.js","sourcesContent":["/*\nLanguage: CSS\nCategory: common, css\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/, returnBegin: true,\n    contains: [\n      {\n        className: 'built_in',\n        begin: /[\\w-]+/\n      },\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.CSS_NUMBER_MODE,\n        ]\n      }\n    ]\n  };\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/, end: ':', excludeEnd: true,\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION_LIKE,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'number', begin: '#[0-9A-Fa-f]+'\n        },\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  };\n  var AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  var AT_MODIFIERS = \"and or not only\";\n  var AT_PROPERTY_RE = /@\\-?\\w[\\w]*(\\-\\w+)*/; // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      ATTRIBUTE\n    ]\n  };\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n        ]\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        lexemes: AT_IDENTIFIER,\n        keywords: '@page @font-face'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesnâ€™t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            keywords: AT_MODIFIERS,\n            contains: [\n              {\n                begin: /[a-z-]+:/,\n                className:\"attribute\"\n              },\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = css;\n"],"sourceRoot":""}